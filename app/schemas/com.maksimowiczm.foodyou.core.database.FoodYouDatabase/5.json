{
  "formatVersion": 1,
  "database": {
    "version": 5,
    "identityHash": "b9f8c16b0218d98eed49ee7a4ac30a2a",
    "entities": [
      {
        "tableName": "MealEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `fromHour` INTEGER NOT NULL, `fromMinute` INTEGER NOT NULL, `toHour` INTEGER NOT NULL, `toMinute` INTEGER NOT NULL, `rank` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fromHour",
            "columnName": "fromHour",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "fromMinute",
            "columnName": "fromMinute",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "toHour",
            "columnName": "toHour",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "toMinute",
            "columnName": "toMinute",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "rank",
            "columnName": "rank",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        }
      },
      {
        "tableName": "ProductEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `brand` TEXT, `barcode` TEXT, `packageWeight` REAL, `servingWeight` REAL, `productSource` INTEGER NOT NULL, `calories` REAL NOT NULL, `proteins` REAL NOT NULL, `carbohydrates` REAL NOT NULL, `sugars` REAL, `fats` REAL NOT NULL, `saturatedFats` REAL, `salt` REAL, `sodium` REAL, `fiber` REAL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "brand",
            "columnName": "brand",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "barcode",
            "columnName": "barcode",
            "affinity": "TEXT"
          },
          {
            "fieldPath": "packageWeight",
            "columnName": "packageWeight",
            "affinity": "REAL"
          },
          {
            "fieldPath": "servingWeight",
            "columnName": "servingWeight",
            "affinity": "REAL"
          },
          {
            "fieldPath": "productSource",
            "columnName": "productSource",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "nutrients.calories",
            "columnName": "calories",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "nutrients.proteins",
            "columnName": "proteins",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "nutrients.carbohydrates",
            "columnName": "carbohydrates",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "nutrients.sugars",
            "columnName": "sugars",
            "affinity": "REAL"
          },
          {
            "fieldPath": "nutrients.fats",
            "columnName": "fats",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "nutrients.saturatedFats",
            "columnName": "saturatedFats",
            "affinity": "REAL"
          },
          {
            "fieldPath": "nutrients.salt",
            "columnName": "salt",
            "affinity": "REAL"
          },
          {
            "fieldPath": "nutrients.sodium",
            "columnName": "sodium",
            "affinity": "REAL"
          },
          {
            "fieldPath": "nutrients.fiber",
            "columnName": "fiber",
            "affinity": "REAL"
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        }
      },
      {
        "tableName": "ProductMeasurementEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `mealId` INTEGER NOT NULL, `diaryEpochDay` INTEGER NOT NULL, `productId` INTEGER NOT NULL, `measurement` INTEGER NOT NULL, `quantity` REAL NOT NULL, `createdAt` INTEGER NOT NULL, `isDeleted` INTEGER NOT NULL, FOREIGN KEY(`productId`) REFERENCES `ProductEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`mealId`) REFERENCES `MealEntity`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "mealId",
            "columnName": "mealId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "diaryEpochDay",
            "columnName": "diaryEpochDay",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productId",
            "columnName": "productId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "measurement",
            "columnName": "measurement",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "quantity",
            "columnName": "quantity",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isDeleted",
            "columnName": "isDeleted",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_ProductMeasurementEntity_productId",
            "unique": false,
            "columnNames": [
              "productId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ProductMeasurementEntity_productId` ON `${TABLE_NAME}` (`productId`)"
          },
          {
            "name": "index_ProductMeasurementEntity_isDeleted",
            "unique": false,
            "columnNames": [
              "isDeleted"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ProductMeasurementEntity_isDeleted` ON `${TABLE_NAME}` (`isDeleted`)"
          },
          {
            "name": "index_ProductMeasurementEntity_mealId",
            "unique": false,
            "columnNames": [
              "mealId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ProductMeasurementEntity_mealId` ON `${TABLE_NAME}` (`mealId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "ProductEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "productId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "MealEntity",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "mealId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "OpenFoodFactsPagingKeyEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`queryString` TEXT NOT NULL, `country` TEXT NOT NULL, `fetchedCount` INTEGER NOT NULL, `totalCount` INTEGER NOT NULL, PRIMARY KEY(`queryString`, `country`))",
        "fields": [
          {
            "fieldPath": "queryString",
            "columnName": "queryString",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "country",
            "columnName": "country",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fetchedCount",
            "columnName": "fetchedCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalCount",
            "columnName": "totalCount",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "queryString",
            "country"
          ]
        }
      },
      {
        "tableName": "SearchQueryEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`query` TEXT NOT NULL, `epochSeconds` INTEGER NOT NULL, PRIMARY KEY(`query`))",
        "fields": [
          {
            "fieldPath": "query",
            "columnName": "query",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "epochSeconds",
            "columnName": "epochSeconds",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "query"
          ]
        }
      }
    ],
    "views": [
      {
        "viewName": "DiaryDayView",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT\n        diaryEpochDay AS epochDay,\n        pm.mealId AS mealId,\n        m.name AS mealName,\n        pm.productId AS productId,\n        p.name AS foodName,\n        p.calories AS calories,\n        p.proteins AS proteins,\n        p.carbohydrates AS carbohydrates,\n        p.sugars AS sugars,\n        p.fats AS fats,\n        p.saturatedFats AS saturatedFats,\n        p.salt AS salt,\n        p.sodium AS sodium,\n        p.fiber AS fiber,\n        p.packageWeight AS packageWeight,\n        p.servingWeight AS servingWeight,\n        pm.id AS measurementId,\n        pm.measurement AS measurement,\n        pm.quantity AS quantity\n    FROM ProductMeasurementEntity pm\n    JOIN ProductEntity p ON pm.productId = p.id\n    JOIN MealEntity m ON pm.mealId = m.id\n    WHERE pm.isDeleted = 0"
      },
      {
        "viewName": "MeasuredFoodView",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT\n        p.id AS productId,\n        pm.diaryEpochDay AS epochDay,\n        pm.mealId AS mealId,\n        p.name AS name,\n        p.brand AS brand,\n        p.barcode AS barcode,\n        p.calories AS calories,\n        p.proteins AS proteins,\n        p.carbohydrates AS carbohydrates,\n        p.fats AS fats,\n        p.packageWeight AS packageWeight,\n        p.servingWeight AS servingWeight,\n        pm.id AS measurementId,\n        pm.measurement AS measurement,\n        pm.quantity AS quantity\n    FROM ProductEntity p\n    JOIN ProductMeasurementEntity pm ON p.id = pm.productId\n    WHERE pm.isDeleted = 0"
      },
      {
        "viewName": "MeasurementSuggestionView",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT\n        p.id AS productId,\n        p.name AS name,\n        p.brand AS brand,\n        p.barcode AS barcode,\n        p.calories AS calories,\n        p.proteins AS proteins,\n        p.carbohydrates AS carbohydrates,\n        p.fats AS fats,\n        p.packageWeight AS packageWeight,\n        p.servingWeight AS servingWeight,\n\n        CASE \n            WHEN pm.measurement IS NOT NULL THEN pm.measurement\n            WHEN p.servingWeight IS NOT NULL THEN 2\n            WHEN p.packageWeight IS NOT NULL THEN 1\n            ELSE 0\n        END AS measurement,\n\n        CASE \n            WHEN pm.quantity IS NOT NULL THEN pm.quantity\n            WHEN p.servingWeight IS NOT NULL THEN 1\n            WHEN p.packageWeight IS NOT NULL THEN 1\n            ELSE 100\n        END AS quantity\n\n    FROM ProductEntity p\n    LEFT JOIN ProductMeasurementEntity pm ON p.id = pm.productId\n    WHERE \n        pm.createdAt IS NULL \n        OR pm.createdAt = (\n            SELECT MAX(createdAt)\n            FROM ProductMeasurementEntity\n            WHERE productId = pm.productId\n        )"
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'b9f8c16b0218d98eed49ee7a4ac30a2a')"
    ]
  }
}